name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  release:
    # Only create releases on main branch pushes (not PRs)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build and Publish
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            npm run build-mac -- --publish always
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            npm run build-win -- --publish always
          else
            npm run build-linux -- --publish always
          fi
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  # Build-only job for PRs (no publishing)
  build-pr:
    if: github.event_name == 'pull_request'
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build (PR test)
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            npm run build-mac -- --publish=never
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            npm run build-win -- --publish=never
          else
            npm run build-linux -- --publish=never
          fi
        shell: bash